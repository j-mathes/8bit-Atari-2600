	processor 6502
        
        include "vcs.h"
        include "macro.h"
        org $f000	; start code at $f000

;-------------------------------------------------------------
; Chapter 6 - Playfield Graphics
;
;	Using the playfield registers: PF0, PF1, PF2
;	Between them, they represent 20 bits of bitmap info
;	that are replicated over 40 wide pixels for each
;	scanline.  By changing the registers before each
;	scanline, we can draw bitmaps.
;-------------------------------------------------------------

Counter	equ $81		; variable in memory address $81

Start
	CLEAN_START	; macro to safely clear memroy and TIA
        
NextFrame
;	lda #2		; same as binary #%00000010
;       sta VBLANK	; turn on VBLANK
;       sta VSYNC	; turn on VSYNC
        
;       sta WSYNC	; first scanline
;       sta WSYNC	; second scanline
;       sta WSYNC	; third scanline
;       lda #0
;       sta VSYNC	; turn off VSYNC
 
; The VERTICAL_SYNC macro replaces the above commented out lines
	VERTICAL_SYNC

        ldx #37		; count 37 scanlines
LVBlank
	sta WSYNC	; wait for next scanline
        dex		; decrement x
        bne LVBlank	; loop while x != 0
;-----------------------------------------------------------------
	stx VBLANK	; disable VBLANK
        
        lda #$82
        sta COLUPF	; set foreground color
        
; Draw the 192 scanlines
        ldx #192
        lda #0		; changes every scanline
        ;lda Counter	; uncomment to scroll
        
ScanLoop
	sta WSYNC	; wait for next scanline
        sta PF0		; set the PF0 playfield pattern register
        sta PF1		; set the PF1 playfield pattern register
        sta PF2		; set the PF2 playfield pattern register
        sta COLUBK	; set the background color
        clc		; CLear (C)arry flag
        adc #1		; increment A
        dex		; decrement X
        bne ScanLoop	; loop while X != 0
        
;-----------------------------------------------------------------
; Re-enable VBLANK for bottom (and top of next frame)
        lda #2
        sta VBLANK	; turn on VBLANK again
        ldx #30		; count 30 scanlines
LVOver
	sta WSYNC	; wait for next scanline
        dex		; decrement X
        bne LVOver	; loop while X != 0
        
; Go back and do another frame        
        inc Counter	; increment Counter
        jmp NextFrame	; jump to NextFrame label
        
        org $fffc
        .word Start	; reset vector at $fffc
        .word Start	; interrupt vector at $fffe (unused in VCS)
